{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","map","_ref","node","frontmatter","fields","slug","key","className","style","Object","assign","scale","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","color","to","display","marginBottom","rhythm","marginTop","date","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Wordpress2016","overrideThemeStyles",".title a:hover","textDecoration","a.gatsby-resp-image-link","h1","fontFamily","join","typography","Typography","googleFonts","name","headerFontFamily","bodyFontFamily","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Layout","_this$props","marginLeft","marginRight","maxWidth","padding","textAlign","Date","getFullYear","href","SEO","description","lang","meta","_public_static_d_2223850672_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","image","author","concat","length","defaultProps","array","arrayOf"],"mappings":"uNAOMA,4FACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUb,KAAKC,MAAMY,SAAUR,MAAOH,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACET,MAAM,YACNU,SAAU,yCAEXT,EAAMU,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KACpD,OACEZ,EAAAC,EAAAC,cAAA,OAAKW,IAAKJ,EAAKE,OAAOC,MACpBZ,EAAAC,EAAAC,cAAA,MACEY,UAAU,QACVC,MAAKC,OAAAC,OAAA,GACAC,YAAM,MAGXlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEJ,MAAO,CACLK,UAAS,OACTC,MAAO,sBAETC,GAAIb,EAAKE,OAAOC,MAEfhB,IAGLI,EAAAC,EAAAC,cAAA,KACEa,MAAKC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHK,QAAO,QACPC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBhB,EAAKC,YAAYiB,cAxCVC,IAAMC,WAkDfzC,YAER,IAAM0C,EAAS,+CC3DtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAxC,IAAA8B,EAAA,SAYMW,EAAqBd,IAAMe,cAAc,IAEzCT,EAAc,SAAA1C,GAAK,OACvB4C,EAAAnC,EAAAC,cAACwC,EAAmBE,SAApB,KACG,SAAAC,GACC,OACErD,EAAMF,MACLuD,EAAgBrD,EAAMsD,QAAUD,EAAgBrD,EAAMsD,OAAOxD,MAEtDE,EAAMH,QAAUG,EAAMuD,UAC5BvD,EAAMF,KAAOE,EAAMF,KAAKA,KAAOuD,EAAgBrD,EAAMsD,OAAOxD,MAGvD8C,EAAAnC,EAAAC,cAAA,uCA4BfgC,EAAYc,UAAY,CACtB1D,KAAM2D,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxB/D,OAAQ4D,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,kJCG/CK,IAAcC,oBAAsB,WAClC,MAAO,CACLC,iBAAkB,CAChBC,eAAgB,aAElBC,2BAA4B,CAC1B3C,UAAS,QAEX4C,GAAI,CACFC,WAAY,CAAC,UAAW,YAAa,QAAS,cAAcC,KAAK,QAKvE,IAAMC,EAAa,IAAIC,IAAJpD,OAAAC,OAAA,GACd0C,IADc,CAEjBU,YAAa,CACX,CACEC,KAAM,kBAGVC,iBAAkB,CAAC,UAAW,YAAa,QAAS,cACpDC,eAAgB,CAAC,UAAW,YAAa,QAAS,iBAQrCL,IACF1C,EAAS0C,EAAW1C,OACpBP,EAAQiD,EAAWjD,wGC7B1BuD,EAAmB,SAAAjE,GAAkB,IAAfJ,EAAeI,EAAfJ,SACpBsE,EAAgBC,UAAOC,4BAA4BxE,EAASyE,UAClE,OAAOjD,IAAM1B,cAAc4E,IAApB9D,OAAAC,OAAA,CACLb,WACAsE,iBACGA,EAAcK,QAIrBN,EAAiBzB,UAAY,CAC3B5C,SAAU6C,IAAU+B,MAAM,CACxBH,SAAU5B,IAAUE,OAAOC,aAC1BA,YAGUqB,0GChBTQ,4FACJ5F,OAAA,WAAS,IAAA6F,EACqB3F,KAAKC,MAAzBI,EADDsF,EACCtF,MAAOmD,EADRmC,EACQnC,SAEf,OACE/C,EAAAC,EAAAC,cAAA,OACEa,MAAO,CACLoE,WAAU,OACVC,YAAW,OACXC,SAAU5D,YAAO,IACjB6D,QAAY7D,YAAO,KAAZ,IAAoBA,YAAO,OAGpCzB,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MACEa,MAAKC,OAAAC,OAAA,GACAC,YAAM,KADN,CAEHM,aAAcC,YAAO,KACrBC,UAAW,EACX6D,UAAW,SACXtB,WAAY,4BAGdjE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CACEJ,MAAO,CACLK,UAAS,OACT0C,eAAc,OACdzC,MAAK,WAEPC,GAAE,KAED1B,KAIPI,EAAAC,EAAAC,cAAA,YAAO6C,GACP/C,EAAAC,EAAAC,cAAA,oBACK,IAAIsF,MAAOC,cADhB,mBAGEzF,EAAAC,EAAAC,cAAA,KAAGwF,KAAK,4BAAR,gBAvCW9D,IAAMC,WA8CZoD,uGCvCf,SAASU,EAATnF,GAA2D,IAA5CoF,EAA4CpF,EAA5CoF,YAAaC,EAA+BrF,EAA/BqF,KAAMC,EAAyBtF,EAAzBsF,KAAMxF,EAAmBE,EAAnBF,SAAUV,EAASY,EAATZ,MACxCF,EADiDqG,EAAAzG,KACjDI,KAeFsG,EAAkBJ,GAAelG,EAAKC,aAAaiG,YAEzD,OACEK,EAAAhG,EAAAC,cAACgG,EAAAjG,EAAD,CACEkG,eAAgB,CACdN,QAEFjG,MAAOA,EACPwG,cAAa,QAAU1G,EAAKC,aAAaC,MACzCkG,KAAM,CACJ,CACExB,KAAI,cACJ+B,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASzG,GAEX,CACE0G,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACEC,SAAQ,WACRD,QAAS3G,EAAKC,aAAa4G,OAE7B,CACEjC,KAAI,eACJ+B,QAAO,WAET,CACE/B,KAAI,kBACJ+B,QAAS3G,EAAKC,aAAa6G,QAE7B,CACElC,KAAI,gBACJ+B,QAASzG,GAEX,CACE0E,KAAI,sBACJ+B,QAASL,IAGVS,OACCnG,EAASoG,OAAS,EACd,CACEpC,KAAI,WACJ+B,QAAS/F,EAAS4D,KAAT,OAEX,IAELuC,OAAOX,KAKhBH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNxF,SAAU,IAGZqF,EAAI3C,UAAY,CACd4C,YAAa3C,IAAUE,OACvB0C,KAAM5C,IAAUE,OAChB2C,KAAM7C,IAAU2D,MAChBtG,SAAU2C,IAAU4D,QAAQ5D,IAAUE,QACtCvD,MAAOqD,IAAUE,OAAOC,YAGXuC","file":"component---src-pages-index-js-c0962874254bf2818a06.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h1\n                className=\"title\"\n                style={{\n                  ...scale(0.7),\n                }}\n              >\n                <Link\n                  style={{\n                    boxShadow: `none`,\n                    color: 'rgba(0, 0, 0, 0.9)',\n                  }}\n                  to={node.fields.slug}\n                >\n                  {title}\n                </Link>\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: `block`,\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-1),\n                }}\n              >\n                {node.frontmatter.date}\n              </p>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    '.title a:hover': {\n      textDecoration: 'underline',\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    h1: {\n      fontFamily: ['PT Sans', 'Helvetica', 'Arial', 'sans-serif'].join(','),\n    },\n  }\n}\n\nconst typography = new Typography({\n  ...Wordpress2016,\n  googleFonts: [\n    {\n      name: 'Abril Fatface',\n    },\n  ],\n  headerFontFamily: ['PT Sans', 'Helvetica', 'Arial', 'sans-serif'],\n  bodyFontFamily: ['PT Sans', 'Helvetica', 'Arial', 'sans-serif'],\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { title, children } = this.props\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(27),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          <h1\n            style={{\n              ...scale(1.2),\n              marginBottom: rhythm(1.5),\n              marginTop: 0,\n              textAlign: 'center',\n              fontFamily: '\"Abril Fatface\", serif',\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: `none`,\n                textDecoration: `none`,\n                color: `inherit`,\n              }}\n              to={`/`}\n            >\n              {title}\n            </Link>\n          </h1>\n        </header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            image\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: site.siteMetadata.image,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}
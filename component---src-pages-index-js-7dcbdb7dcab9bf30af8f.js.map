{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","useTitleTemplate","keywords","map","_ref","node","frontmatter","fields","slug","key","className","style","Object","assign","scale","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","color","to","display","marginBottom","rhythm","marginTop","date","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","Fragment","children","Consumer","m","module","exports","require","default","Wordpress2016","overrideThemeStyles",".title a:hover","textDecoration","a.gatsby-resp-image-link","h1","fontFamily","join","body","backgroundColor","typography","Typography","googleFonts","name","styles","headerFontFamily","bodyFontFamily","ProdPageRenderer","pageResources","InternalPageRenderer","json","Layout","_this$props","marginLeft","marginRight","maxWidth","padding","textAlign","Date","getFullYear","href","SEO","description","lang","meta","_public_static_d_776672727_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","siteUrl","image","author","concat","length","defaultProps"],"mappings":"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","file":"component---src-pages-index-js-7dcbdb7dcab9bf30af8f.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { rhythm, scale } from '../utils/typography'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={siteTitle}\n          useTitleTemplate={false}\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h1\n                className=\"title\"\n                style={{\n                  ...scale(0.7),\n                }}\n              >\n                <Link\n                  style={{\n                    boxShadow: `none`,\n                    color: 'rgba(0, 0, 0, 0.9)',\n                  }}\n                  to={node.fields.slug}\n                >\n                  {title}\n                </Link>\n              </h1>\n              <p\n                style={{\n                  ...scale(-1 / 5),\n                  display: `block`,\n                  marginBottom: rhythm(1),\n                  marginTop: rhythm(-1),\n                }}\n              >\n                {node.frontmatter.date}\n              </p>\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    '.title a:hover': {\n      textDecoration: 'underline',\n    },\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n    h1: {\n      fontFamily: ['PT Sans', 'Helvetica', 'Arial', 'sans-serif'].join(','),\n    },\n    body: {\n      backgroundColor: '#fffffb',\n    },\n  }\n}\n\nconst typography = new Typography({\n  ...Wordpress2016,\n  googleFonts: [\n    {\n      name: 'Abril Fatface',\n      styles: ['400'],\n    },\n  ],\n  headerFontFamily: ['PT Sans', 'Helvetica', 'Arial', 'sans-serif'],\n  bodyFontFamily: ['PT Sans', 'Helvetica', 'Arial', 'sans-serif'],\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm, scale } from '../utils/typography'\n\nclass Layout extends React.Component {\n  render() {\n    const { title, children } = this.props\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(27),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>\n          <h1\n            style={{\n              ...scale(1.2),\n              marginBottom: rhythm(1.5),\n              marginTop: 0,\n              textAlign: 'center',\n              fontFamily: '\"Abril Fatface\", serif',\n            }}\n          >\n            <Link\n              style={{\n                boxShadow: `none`,\n                textDecoration: `none`,\n                color: `inherit`,\n              }}\n              to={`/`}\n            >\n              {title}\n            </Link>\n          </h1>\n        </header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title, useTitleTemplate }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            image\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={\n        useTitleTemplate ? `%s | ${site.siteMetadata.title}` : title\n      }\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          property: `og:image`,\n          content: `${site.siteMetadata.siteUrl}${\n            site.siteMetadata.image\n          }?20190312`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  useTitleTemplate: true,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  useTitleTemplate: PropTypes.bool,\n}\n\nexport default SEO\n"],"sourceRoot":""}